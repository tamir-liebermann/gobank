definitions:
  api.BankAccRes:
    properties:
      bank_account:
        $ref: '#/definitions/db.BankAccount'
    type: object
  api.BankAccsRes:
    properties:
      bankAccs:
        items:
          $ref: '#/definitions/db.BankAccount'
        type: array
    type: object
  api.CreateAccountRequest:
    properties:
      password:
        type: string
      user_name:
        type: string
    type: object
  api.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  api.LoginRequest:
    properties:
      password:
        type: string
      user_name:
        type: string
    type: object
  api.LoginResponse:
    properties:
      token:
        type: string
      user_name:
        type: string
    type: object
  api.TransferRequest:
    properties:
      amount:
        type: number
      from_account_id:
        type: string
      to_account_id:
        type: string
    type: object
  db.BankAccount:
    properties:
      accountHolder:
        type: string
      balance:
        type: number
      createdAt:
        type: string
      id:
        type: string
      password:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for a banking application.
  title: GoBank API
  version: "1.0"
paths:
  /account/{id}:
    delete:
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Account not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
    get:
      description: Get account details by its ID
      operationId: get-account-by-id
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Account found!
          schema:
            $ref: '#/definitions/api.BankAccRes'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Account not found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get account by ID
  /account/transfer/{id}:
    post:
      consumes:
      - application/json
      description: Transfer funds from one bank account to another
      operationId: transfer-funds
      parameters:
      - description: Transfer Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.TransferRequest'
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.BankAccRes'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Invalid account ID
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Transfer funds from one account to another
  /admin/accounts:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all accounts
      operationId: get-accounts
      produces:
      - application/json
      responses:
        "200":
          description: Accounts found
          schema:
            items:
              $ref: '#/definitions/api.BankAccsRes'
            type: array
        "500":
          description: Could not retrive accounts
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all accounts
  /create:
    post:
      consumes:
      - application/json
      description: Create a new account with username and password
      operationId: create-account
      parameters:
      - description: Account Information
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/api.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Account created!
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create a new account
  /login:
    post:
      consumes:
      - application/json
      description: login your account via username and password
      operationId: login
      parameters:
      - description: Login Information
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Login your account
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
